/****************************************************************************
* ScriptType: 框架 - 基础业务
* 请勿修改!!!
****************************************************************************/

//                                  
//                            _ooOoo_
//                           o8888888o
//                           88" . "88
//                           (| -_- |)
//                           O\  =  /O
//                        ____/`---'\____
//                      .'  \\|     |//  `.
//                     /  \\|||  :  |||//  \
//                    /  _||||| -:- |||||-  \
//                    |   | \\\  -  /// |   |
//                    | \_|  ''\---/''  |   |
//                    \  .-\__  `-`  ___/-. /
//                  ___`. .'  /--.--\  `. . __
//               ."" '<  `.___\_<|>_/___.'  >'"".
//              | | :  `- \`.;`\ _ /`;.`/ - ` : | |
//              \  \ `-.   \_ __\ /__ _/   .-` /  /
//         ======`-.____`-.___\_____/___.-`____.-'======
//                            `=---='
//        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//                                                        
//        观自在菩萨，行深般若波罗蜜多时，照见五蕴皆空，渡一切苦厄。
//                                                        

/****************************************************************************
*【框架更新项】
* [编辑器]
* 1）自动化和自注册的编辑器菜单项路径合并
* 2）修改命名空间检查工具避免递归 而是使用遍历
* 3) MVC的UI模板全自动化, 自动追加消息
* 4）查找上级框架目录的打包工程
* 
* [事件]
* 1）UI事件与事件派发器自动绑定与自动注销
* 2）UI事件与事件派发器使用特性反射进行自动绑定与自动注销 (UI事件绑定同样思考)
* 
* [框架]
* 1）远程PC端Log接收模块
* 2）弱引用的资源管理
* 3）Instance修改为Inst
* 4) 货币同步的订单系统
* 
* [打表工具]
* 1）将打表信息放到配置中
* 2）打表显示表格数量
* 3）添加结束符
* 4）合并多个拆分配置
* 5）生成常量类型
* 6）支持表头枚举与自定义类的定义，和生成代码
* 
* [插件更新]
* 1）FGUI插件更新
* 2）Spine、Spine_Bug、Spine_Timeline插件更新
* 3）精简BestHttp的WebSocket实现
* 
* [轮子]
* 1）熟悉XZ的轮子
* 
* [FGUI]
* 1) FGUI热更代码模式
* 
* [未来]
* 1）Jenkins云端安卓打包、打表
* 2）Mac兼容一键打表
* 3）注入的性能检测
* 4）多线程运行工具
* 5）红点系统
* 6）DSL系统
* 7）代码热更，资源热更
* 8）网络协议自动化工具
****************************************************************************/

using FutureCore;
using UnityEngine;
using UnityEngine.Scripting;

namespace ProjectApp.Main
{
    [Beebyte.Obfuscator.Skip]
    [Preserve]
    public static class AppMain
    {
        [Preserve]
        public static void Main()
        {
            LogUtil.LogFormat("[AppMain]Main Time: {0}", Time.unscaledTime);

            AppFacadeRedirection.RedirectionStaticField();
            AppRedirection.RedirectionStaticField();

            App.InitApplication(ProjectApplication.Instance);
        }
    }
}